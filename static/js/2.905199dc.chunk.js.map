{"version":3,"sources":["pages/countries/redux/countActions.js","pages/Spinners.js","helpers.js","dateUtils.js","pages/DatePicker.js","pages/countries/CountryPageTitle.js","graph/helpers/plugins.js","graph/helpers/chartCallbacks.js","graph/helpers/chartConfig.js","graph/LineChart.js","pages/LineChartWrapper.js","pages/countries/reducers.js","pages/countries/useCustomHooks.js","pages/colors.js"],"names":["getMostRecentCase","key","urlType","dispatch","a","type","countAT","GETTING_MOST_RECENT_CASE","true_or_false","url","axios","get","data","result","GET_MOST_RECENT_CASE","success","response","cleanMostRecentCase","CLEAN_ACTIVE_COUNTRY_CASES","getFirstCase","GETTING_FIRST_CASE","GET_FIRST_CASE","cleanFirstCase","CLEAN_FIRST_CASE","getFirstDeath","GETTING_FIRST_DEATH","GET_FIRST_DEATH","cleanFirstDeath","CLEAN_FIRST_DEATH","getCountries","GETTING_COUNTRIES","metadata","results","GET_COUNTRIES","countries","getCountryByName","name","GETTING_COUNTRY_BY_NAME","country","GET_COUNTRY_BY_NAME","getActiveCountryCases","info","_id","fromDate","toDate","GETTING_ACTIVE_COUNTRY_CASES","GET_ACTIVE_COUNTRY_CASES","cases","cleanActiveCountryCases","getCountryInViewCases","GETTING_COUNTRY_IN_VIEW_CASE","GET_COUNTRY_IN_VIEW_CASE","BorderSpinner","size","animation","role","className","tsRegex","monthNames","monthShortNames","ordinalSuffix","num","j","k","localeFromTSOrdinal","timeStamp","match","d","Date","date","getDate","month","getMonth","year","getFullYear","localeFromTSMonthShort","todayISOStringWithDash","toISOString","split","replace","ISOStringWithDash","ISOStringWithDashFull","DatePicker","props","refs","toRef","fromRef","Prepend","expand","Text","as","id","ref","node","min","value","onChange","e","target","focus","max","CountryPageTitle","short_name","src","alt","plugins","afterDraw","fillColor","chart","easing","yScale","scales","xScale","chartArea","ctx","save","fillStyle","globalCompositeOperation","fillRect","left","bottom","width","restore","beforeDraw","undefined","options","gridLines","display","ticks","forEach","label","index","beginPath","lineWidth","stroke","chartCallbacks","fillSquareLegend","fillColors","titles","map","f","i","container","document","createElement","fillSquare","legendText","style","alignItems","paddingLeft","paddingBottom","height","marginLeft","borderRadius","marginRight","background","textContent","innerHTML","outerHTML","join","chartConfig","xAxisLabel","yAxisLabel","tooltipLabel","fontColor","bgColor","titleFontColor","ttColor","tooltips","enabled","custom","tooltipModel","tooltipEl","getElementById","body","appendChild","opacity","classList","remove","yAlign","add","title","bodyLines","bodyItem","lines","innerHtml","querySelector","this","_chart","position","canvas","getBoundingClientRect","fontFamily","_bodyFontFamily","fontSize","bodyFontSize","fontStyle","_bodyFontStyle","window","pageXOffset","caretX","top","pageYOffset","caretY","padding","yPadding","xPadding","pointerEvents","legend","xAxes","maxRotation","maxTicksLimit","callback","labels","drawBorder","drawOnChartArea","scaleLabel","labelString","yAxes","beginAtZero","React","memo","chartReference","useRef","dataSets","xAxisScale","legendLabel","legendContainerId","useEffect","legendContainer","leg","current","chartInstance","generateLegend","Chart","register","reference","datasets","legendCallback","LineChartWrapper","xAxis","spinner","graphLabel","Container","datesRed","state","action","useDatePicker","initState","useReducer","useCreateDataset","useDispatch","newCases","newDeaths","totalCases","totalDeaths","activeCountryCases","useSelector","cont","c","recordDate","new_cases","new_deaths","total_cases","total_deaths","push","totalCasesXAxis","newCasesXAxis","totalDeathsXAxis","newDeathsXAxis","totalCasesData","fill","lineTension","pointRadius","pointHitRadius","borderColor","borderColors","warning","backgroundColor","bgColors","Number","newCasesData","totalDeathsData","danger","newDeathsData","primary","newCasesFC","newDeathsFC","totalCasesFC","totalDeathsFC"],"mappings":"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","file":"static/js/2.905199dc.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport { countAT } from './countAT';\n\nexport const getMostRecentCase = (key, urlType) => async (dispatch) => {\n  dispatch({ type: countAT.GETTING_MOST_RECENT_CASE, true_or_false: true });\n  const url =\n    urlType === 'name'\n      ? `/most-recent-case-by-name?countryName=${key}`\n      : `/most-recent-case-by-id?country=${key}`;\n  try {\n    const { data } = await axios.get(url);\n    const { result } = data;\n\n    dispatch({ type: countAT.GET_MOST_RECENT_CASE, result });\n    dispatch({ type: countAT.GETTING_MOST_RECENT_CASE, true_or_false: false });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({ type: countAT.GETTING_MOST_RECENT_CASE, true_or_false: false });\n    return data;\n  }\n};\n\nexport const cleanMostRecentCase = () => async (dispatch) => {\n  dispatch({ type: countAT.CLEAN_ACTIVE_COUNTRY_CASES });\n};\n\nexport const getFirstCase = (key, urlType) => async (dispatch) => {\n  dispatch({ type: countAT.GETTING_FIRST_CASE, true_or_false: true });\n  const url =\n    urlType === 'name'\n      ? `/first-case-by-name?countryName=${key}`\n      : `/first-case-by-id?country=${key}`;\n  try {\n    const { data } = await axios.get(url);\n    const { result } = data;\n\n    dispatch({ type: countAT.GET_FIRST_CASE, result });\n    dispatch({ type: countAT.GETTING_FIRST_CASE, true_or_false: false });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({ type: countAT.GETTING_FIRST_CASE, true_or_false: false });\n    return data;\n  }\n};\n\nexport const cleanFirstCase = () => async (dispatch) => {\n  dispatch({ type: countAT.CLEAN_FIRST_CASE });\n};\n\nexport const getFirstDeath = (key, urlType) => async (dispatch) => {\n  dispatch({ type: countAT.GETTING_FIRST_DEATH, true_or_false: true });\n  const url =\n    urlType === 'name'\n      ? `/first-death-by-name?countryName=${key}`\n      : `/first-death-by-id?country=${key}`;\n  try {\n    const { data } = await axios.get(url);\n    const { result } = data;\n\n    dispatch({ type: countAT.GET_FIRST_DEATH, result });\n    dispatch({ type: countAT.GETTING_FIRST_DEATH, true_or_false: false });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({ type: countAT.GETTING_FIRST_DEATH, true_or_false: false });\n    return data;\n  }\n};\n\nexport const cleanFirstDeath = () => async (dispatch) => {\n  dispatch({ type: countAT.CLEAN_FIRST_DEATH });\n};\n\nexport const getCountries = () => async (dispatch) => {\n  dispatch({ type: countAT.GETTING_COUNTRIES, true_or_false: true });\n  try {\n    const { data } = await axios.get('/all-countries');\n    const { metadata, results } = data;\n\n    dispatch({ type: countAT.GET_COUNTRIES, countries: results, metadata });\n    dispatch({ type: countAT.GETTING_COUNTRIES, true_or_false: false });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({ type: countAT.GETTING_COUNTRIES, true_or_false: false });\n    return data;\n  }\n};\n\nexport const getCountryByName = (name) => async (dispatch) => {\n  dispatch({ type: countAT.GETTING_COUNTRY_BY_NAME, true_or_false: true });\n  try {\n    const { data } = await axios.get(`/country?name=${name}`);\n    const { country } = data;\n    dispatch({ type: countAT.GET_COUNTRY_BY_NAME, country });\n    dispatch({ type: countAT.GETTING_COUNTRY_BY_NAME, true_or_false: false });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({ type: countAT.GETTING_COUNTRY_BY_NAME, true_or_false: false });\n    return data;\n  }\n};\n\nexport const getActiveCountryCases = (info) => async (dispatch) => {\n  const { _id, fromDate, toDate } = info;\n  dispatch({ type: countAT.GETTING_ACTIVE_COUNTRY_CASES, true_or_false: true });\n  try {\n    const { data } = await axios.get(\n      `/cases?country=${_id}&fromDate=${fromDate}&toDate=${toDate}&skip=0&limit=100`\n    );\n    const { metadata, results } = data;\n    dispatch({\n      type: countAT.GET_ACTIVE_COUNTRY_CASES,\n      cases: results,\n      metadata,\n    });\n    dispatch({\n      type: countAT.GETTING_ACTIVE_COUNTRY_CASES,\n      true_or_false: false,\n    });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({\n      type: countAT.GETTING_ACTIVE_COUNTRY_CASES,\n      true_or_false: false,\n    });\n    return data;\n  }\n};\n\nexport const cleanActiveCountryCases = () => async (dispatch) => {\n  dispatch({ type: countAT.CLEAN_ACTIVE_COUNTRY_CASES });\n};\n\nexport const getCasesByCountryName = (info) => async (dispatch) => {\n  const { countryName, fromDate, toDate } = info;\n  dispatch({\n    type: countAT.GETTING_CASES_BY_COUNTRY_NAME,\n    true_or_false: true,\n  });\n  try {\n    const { data } = await axios.get(\n      `/cases?countryName=${countryName}&fromDate=${fromDate}&toDate=${toDate}&skip=0&limit=100`\n    );\n    const { metadata, results } = data;\n    dispatch({\n      type: countAT.GET_CASES_BY_COUNTRY_NAME,\n      cases: results,\n      metadata,\n    });\n    dispatch({\n      type: countAT.GETTING_CASES_BY_COUNTRY_NAME,\n      true_or_false: false,\n    });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({\n      type: countAT.GETTING_CASES_BY_COUNTRY_NAME,\n      true_or_false: false,\n    });\n    return data;\n  }\n};\n\nexport const getCountryInViewCases = (info) => async (dispatch) => {\n  const { _id, name, fromDate, toDate } = info;\n  dispatch({ type: countAT.GETTING_COUNTRY_IN_VIEW_CASE, true_or_false: true });\n  try {\n    const { data } = await axios.get(\n      `/cases?country=${_id}&fromDate=${fromDate}&toDate=${toDate}&skip=0&limit=100`\n    );\n    const { metadata, results } = data;\n    dispatch({\n      name,\n      metadata,\n      cases: results,\n      type: countAT.GET_COUNTRY_IN_VIEW_CASE,\n    });\n    dispatch({\n      type: countAT.GETTING_COUNTRY_IN_VIEW_CASE,\n      true_or_false: false,\n    });\n    return { success: true };\n  } catch (e) {\n    const { response } = e;\n    const data = response && response.data;\n    dispatch({\n      type: countAT.GETTING_COUNTRY_IN_VIEW_CASE,\n      true_or_false: false,\n    });\n    return data;\n  }\n};\n","import React from 'react';\n\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport const BorderSpinner = () => {\n  return (\n    <Spinner\n      size=\"lg\"\n      animation=\"border\"\n      role=\"status\"\n      className=\"border-spinner\"\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n","export const tsRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/;\n\nexport const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const monthShortNames = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const ordinalSuffix = (num) => {\n  // 1st, 2nd, 3rd, 4th, etc.\n  const j = num % 10;\n  const k = num % 100;\n  switch (true) {\n  case j === 1 && k !== 11:\n    return `${num}st`;\n  case j === 2 && k !== 12:\n    return `${num}nd`;\n  case j === 3 && k !== 13:\n    return `${num}rd`;\n  default:\n    return `${num}th`;\n  }\n};\n","import { tsRegex, monthNames, monthShortNames, ordinalSuffix } from './helpers';\n\nexport const timeStampIsValid = (timeStamp) => {\n  if (!timeStamp) return false;\n  if (!timeStamp.match(tsRegex)) return false;\n  return true;\n};\n\nexport const localeFromTSOrdinal = (timeStamp) => {\n  // 15th January 2020\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  const d = new Date(timeStamp);\n  const date = d.getDate();\n  const month = d.getMonth();\n  const year = d.getFullYear();\n  return `${ordinalSuffix(date)} ${monthNames[month]} ${year}`;\n};\n\nexport const formCompositeTime = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  const spl = timeStamp.split('T');\n  const date = spl[0];\n  const time = spl[1].split('Z')[0];\n  return new Date(`${date} ${time}`);\n};\n\nexport const compositeTimeFromTS = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  const spl = timeStamp.split('T');\n  const date = spl[0];\n  const time = spl[1].split('Z')[0];\n  return new Date(`${date} ${time}`).getTime();\n};\n\nexport const localeFromTSFull = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  // Sunday, 8 November 2020 at 01:00\n  return new Date(timeStamp).toLocaleString('en-GB', {\n    dateStyle: 'full',\n    timeStyle: 'short',\n  });\n};\n\nexport const localeFromTS = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  // Friday, 8 November 2019\n  return new Date(timeStamp).toLocaleString('en-GB', {\n    dateStyle: 'full',\n  });\n};\n\nexport const localeFromTSToDMY = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  // 30/11/2019, 8:00 PM\n  // 15/10/2019, 12:36 PM\n  const options = {\n    hour12: true,\n    day: 'numeric',\n    hour: 'numeric',\n    year: 'numeric',\n    month: 'numeric',\n    minute: 'numeric',\n  };\n  return (\n    new Date(timeStamp)\n      .toLocaleString('en-GB', options)\n      .replace(/0:/, '12:') // format 12 o clock\n      // .replace(/,/, ' at')\n      .replace(/am/, 'AM')\n      .replace(/pm/, 'PM')\n  );\n};\n\nexport const localeFromTSShort = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  // December 6th, 2019\n  const d = new Date(timeStamp);\n  const date = d.getDate();\n  const month = d.getMonth();\n  const year = d.getFullYear();\n  return `${monthNames[month]} ${ordinalSuffix(date)}, ${year}`;\n};\n\nexport const localeFromTSMonthShort = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  // Dec 6th, 2019\n  const d = new Date(timeStamp);\n  const date = d.getDate();\n  const month = d.getMonth();\n  const year = d.getFullYear();\n  return `${monthShortNames[month]}-${ordinalSuffix(date)}-${year}`;\n};\n\nexport const localeFromTSUTC = (timeStamp) => {\n  if (!timeStamp) return 'Unknown date';\n  if (!timeStamp.match(tsRegex)) return 'Invalid timestamp';\n  // Friday, 8 November 2019 at 16:44\n  return new Date(timeStamp).toLocaleString('en-GB', {\n    // timeZone: 'UTC',\n    dateStyle: 'full',\n    timeStyle: 'short',\n  });\n};\n\nexport const todayISOStringWithDash = () =>\n  new Date().toISOString().split('T')[0].replace(/\\//g, '-');\n\nexport const todayPlusNDays = (n, asISO = false) => {\n  // add n days to today and returns an ISO or object\n  let future = new Date();\n  future = future.setDate(future.getDate() + n);\n  if (asISO) {\n    return new Date(future).toISOString().split('T')[0].replace(/\\//g, '-');\n  }\n  return new Date(future);\n};\n\nexport const todayMinusNDays = (n, asISO = false) => {\n  // remove n days from today and returns an ISO or object\n  let past = new Date();\n  past = past.setDate(past.getDate() - n);\n  if (asISO) {\n    return new Date(past).toISOString().split('T')[0].replace(/\\//g, '-');\n  }\n  return new Date(past);\n};\n\nexport const timePlusNHoursISO = (date, n) => {\n  const time = new Date(date);\n  const extended = time.setHours(time.getHours() + n);\n\n  return new Date(extended).toISOString().split('T')[1].split('Z')[0];\n};\n\nexport const ISOStringWithDash = (timeStamp) => {\n  // \"2020-03-05\"}\n  if (!timeStamp) return 'Unknown date';\n  return new Date(timeStamp).toISOString().split('T')[0].replace(/\\//g, '-');\n};\n\nexport const ISOStringWithDashFull = (timeStamp) => {\n  // \"2020-03-05\"}\n  if (!timeStamp) return 'Unknown date';\n  return new Date(timeStamp).toISOString();\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from 'react-bootstrap/Container';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport { ISOStringWithDash, todayISOStringWithDash } from '../dateUtils';\n\nexport const DatePicker = (props) => {\n  const { data, dispatch } = props;\n\n  const refs = { toRef: null, fromRef: null };\n\n  return (\n    <Container className=\"country-page-date-selector\">\n      <InputGroup className=\"\">\n        <InputGroup.Prepend expand=\"sm\">\n          <InputGroup.Text>Set date range</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          as={'input'}\n          type={'date'}\n          id=\"fromDate\"\n          ref={(node) => (refs.fromRef = node)}\n          min={ISOStringWithDash('2019-09-01')}\n          value={ISOStringWithDash(data.fromDate)}\n          onChange={(e) => {\n            dispatch({ type: 'SET_FROM_DATE', fromDate: e.target.value });\n            refs.toRef.focus();\n          }}\n        />\n        <FormControl\n          id=\"toDate\"\n          as={'input'}\n          type={'date'}\n          max={todayISOStringWithDash()}\n          ref={(node) => (refs.toRef = node)}\n          value={ISOStringWithDash(data.toDate)}\n          onChange={(e) => {\n            dispatch({ type: 'SET_TO_DATE', toDate: e.target.value });\n          }}\n        />\n      </InputGroup>\n    </Container>\n  );\n};\n\nDatePicker.propTypes = {\n  data: PropTypes.object,\n  dispatch: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from 'react-bootstrap/Container';\n\nexport const CountryPageTitle = (props) => {\n  const { name, short_name } = props;\n\n  return (\n    <Container className=\"country-page-flag-container\">\n      <div className=\"img64-container\">\n        <img\n          src={`https://www.countryflags.io/${short_name}/shiny/64.png`}\n          alt=\"Flag\"\n        />\n      </div>\n      <h2>{name}</h2>\n    </Container>\n  );\n};\n\nCountryPageTitle.propTypes = {\n  name: PropTypes.string,\n  short_name: PropTypes.string,\n};\n","/* eslint-disable no-unused-vars */\nconst plugins = {\n  afterDraw: (fillColor) => {\n    // draw rectangular area below the x-axis\n    return function (chart, easing) {\n      const yScale = chart.scales['y-axis-0'];\n      const xScale = chart.scales['x-axis-0'];\n      const chartArea = chart.chartArea;\n      yScale.ctx.save();\n      yScale.ctx.fillStyle = fillColor;\n      yScale.ctx.globalCompositeOperation = 'destination-over';\n      yScale.ctx.fillRect(\n        xScale.left,\n        yScale.bottom,\n        xScale.width,\n        chartArea.bottom\n      );\n      yScale.ctx.restore();\n    };\n  },\n\n  beforeDraw: () => {\n    // remove tick marks\n    return function (chart) {\n      const ctx = chart.ctx;\n      const xScale = chart.scales['x-axis-0'];\n      const yScale = chart.scales['y-axis-0'];\n      if (xScale !== undefined) {\n        xScale.options.gridLines.display = false;\n        // yScale.options.gridLines.display = false;\n        xScale.ticks.forEach(function (label, index) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.lineWidth = 1;\n          ctx.stroke();\n          ctx.restore();\n        });\n      }\n    };\n  },\n};\n\nexport default plugins;\n","/* eslint-disable no-unused-vars */\nconst chartCallbacks = {\n  fillSquareLegend: (fillColors, titles) =>\n    function (chart) {\n      const legends = fillColors.map((f, i) => {\n        const container = document.createElement('div');\n        const fillSquare = document.createElement('div');\n        const legendText = document.createElement('span');\n\n        container.style.display = 'flex';\n        container.style.alignItems = 'center';\n        container.style.paddingLeft = '8px';\n        container.style.paddingBottom = '5px';\n\n        fillSquare.style.height = '15px';\n        fillSquare.style.width = '15px';\n        fillSquare.style.marginLeft = '10px';\n        fillSquare.style.borderRadius = '2px';\n        fillSquare.style.marginRight = '10px';\n\n        fillSquare.style.background = f;\n        legendText.textContent = titles[i];\n\n        container.innerHTML = fillSquare.outerHTML + legendText.outerHTML;\n        return container.outerHTML;\n      });\n\n      return legends.join('');\n    },\n};\n\nexport default chartCallbacks;\n","/* eslint-disable no-unused-vars */\nexport const chartConfig = (\n  xAxisLabel,\n  yAxisLabel,\n  tooltipLabel,\n  fontColor,\n  bgColor,\n  titleFontColor,\n  ttColor\n) => {\n  return {\n    tooltips: {\n      enabled: false,\n\n      custom: function (tooltipModel) {\n        const customTooltipDivId = 'custom-tooltip-div-id';\n        // Tooltip Element\n        let tooltipEl = document.getElementById('chartjs-tooltip');\n\n        // Create element on first render\n        if (!tooltipEl) {\n          tooltipEl = document.createElement('div');\n          tooltipEl.id = 'chartjs-tooltip';\n          tooltipEl.innerHTML = `<div id=\"${customTooltipDivId}\"></div>`;\n          document.body.appendChild(tooltipEl);\n        }\n\n        // Hide if no tooltip\n        if (tooltipModel.opacity === 0) {\n          tooltipEl.style.opacity = 0;\n          return;\n        }\n\n        // Set caret Position\n        tooltipEl.classList.remove('above', 'below', 'no-transform');\n        if (tooltipModel.yAlign) {\n          tooltipEl.classList.add(tooltipModel.yAlign);\n        } else {\n          tooltipEl.classList.add('no-transform');\n        }\n\n        function getBody(bodyItem) {\n          return bodyItem.lines;\n        }\n\n        // Set Text\n        if (tooltipModel.body) {\n          const titleLines = tooltipModel.title || [];\n          const bodyLines = tooltipModel.body.map(getBody);\n\n          let innerHtml = '';\n          bodyLines.forEach(function (body, i) {\n            const num = body[i].split(':')[1];\n            const title = tooltipModel.title[0];\n            innerHtml += '<div>' + title + '</div>';\n            innerHtml += '<div id=\"value\">' + num + '</div>';\n            innerHtml += '<div>' + tooltipLabel + '</div>';\n          });\n\n          const tableRoot = tooltipEl.querySelector('#' + customTooltipDivId);\n          tableRoot.innerHTML = innerHtml;\n        }\n\n        // `this` will be the overall tooltip\n        const chart = this._chart;\n        var position = chart.canvas.getBoundingClientRect();\n        const canvas = chart.canvas;\n\n        tooltipEl.style.opacity = 1;\n        tooltipEl.style.position = 'absolute';\n        tooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;\n        tooltipEl.style.fontSize = tooltipModel.bodyFontSize + 'px';\n        tooltipEl.style.fontStyle = tooltipModel._bodyFontStyle;\n        tooltipEl.style.left =\n          position.left + window.pageXOffset + tooltipModel.caretX + 'px';\n        tooltipEl.style.top =\n          position.top +\n          window.pageYOffset +\n          tooltipModel.caretY -\n          canvas.height / 10 +\n          'px';\n        tooltipEl.style.padding =\n          tooltipModel.yPadding + 'px ' + tooltipModel.xPadding + 'px';\n        tooltipEl.style.pointerEvents = 'none';\n      },\n    },\n    title: {\n      display: true,\n    },\n    legend: {\n      display: false,\n      // position: 'top',\n      // fullWidth: true,\n      // align: 'start',\n      // labels: {\n      //   boxWidth: 15,\n      // generateLabels:  function (chart) {\n      //   chart.legend.afterFit = function () {\n      //     const width = this.width; // guess you can play with this value to achieve needed layout\n      //     console.log(width)\n      //     this.lineWidths = this.lineWidths.map(function(){return width;});\n      //     return {\n      //       text: 'label',\n      //       fillStyle: 'red'\n      //     };\n      //   };\n      // }\n      // },\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor,\n            fontSize: 14,\n            display: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            callback: (label, index, labels) => label.split('-'),\n          },\n          gridLines: {\n            drawBorder: false,\n            drawOnChartArea: false,\n          },\n          scaleLabel: {\n            // display: true,\n            labelString: xAxisLabel,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          display: true,\n          ticks: {\n            min: 0,\n            fontColor,\n            fontSize: 14,\n            // display: true,\n            maxTicksLimit: 5,\n            beginAtZero: true,\n          },\n          gridLines: {\n            drawBorder: true,\n            drawOnChartArea: true,\n          },\n          scaleLabel: {\n            // display: true,\n            labelString: yAxisLabel,\n          },\n        },\n      ],\n    },\n  };\n};\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart, Line } from 'react-chartjs-2';\n\nimport plugins from './helpers/plugins';\nimport chartCallbacks from './helpers/chartCallbacks';\nimport { chartConfig } from './helpers/chartConfig';\n\nconst LineChart = (props) => {\n  let chartReference = useRef();\n  let {\n    dataSets,\n    fontColor,\n    xAxisScale,\n    yAxisLabel,\n    legendLabel,\n    tooltipLabel,\n    legendContainerId,\n  } = props;\n\n  useEffect(() => {\n    const legendContainer = document.getElementById(legendContainerId);\n    if (chartReference && legendContainer) {\n      const leg = chartReference.current.chartInstance.generateLegend();\n      legendContainer.innerHTML = leg;\n    }\n  }, [ chartReference, legendContainerId ]);\n\n  Chart.plugins.register({\n    beforeDraw: plugins.beforeDraw(),\n  });\n\n  return (\n    <Line\n      width={200}\n      height={75}\n      ref={(reference) => (chartReference.current = reference)}\n      data={{\n        labels: xAxisScale,\n        datasets: dataSets,\n      }}\n      options={{\n        // maintainAspectRatio: false,\n        ...chartConfig(\n          'Number of Covid19 cases',\n          yAxisLabel,\n          tooltipLabel,\n          fontColor,\n          '#FAFCFE',\n          '#111111',\n          fontColor\n        ),\n        legendCallback: chartCallbacks.fillSquareLegend(\n          [ fontColor ],\n          [ legendLabel ]\n        ),\n      }}\n    />\n  );\n};\n\nLineChart.propTypes = {\n  dataSets: PropTypes.array,\n  xAxisScale: PropTypes.array,\n  yAxisLabel: PropTypes.string,\n  fontColor: PropTypes.string,\n  legendLabel: PropTypes.string,\n  tooltipLabel: PropTypes.string,\n  legendContainerId: PropTypes.string,\n};\n\nexport default React.memo(LineChart);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\n\nimport { BorderSpinner } from './Spinners';\n\nimport LineChart from '../graph/LineChart';\n\nconst LineChartWrapper = (props) => {\n  const {\n    xAxis,\n    spinner,\n    dataSets,\n    fontColor,\n    graphLabel,\n    yAxisLabel,\n    legendLabel,\n    tooltipLabel,\n    legendContainerId,\n  } = props;\n\n  return (\n    <Container className=\"graph-grid-child mt-4\">\n      <Container className=\"chart-header\">\n        <div className=\"chart-title\">\n          <h3>{graphLabel}</h3>\n        </div>\n        <div className=\"graph-selector-container\"></div>\n      </Container>\n\n      {spinner ? (\n        <BorderSpinner />\n      ) : (\n        <Container className=\"line-chart-container\">\n          <div className=\"left-aligned-legend\">\n            <div id={legendContainerId} className=\"mt-4\"></div>\n          </div>\n          <Container>\n            <LineChart\n              xAxisScale={xAxis}\n              dataSets={dataSets}\n              fontColor={fontColor}\n              yAxisLabel={yAxisLabel}\n              legendLabel={legendLabel}\n              tooltipLabel={tooltipLabel}\n              legendContainerId={legendContainerId}\n            />\n          </Container>\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nLineChartWrapper.propTypes = {\n  xAxis: PropTypes.array,\n  spinner: PropTypes.bool,\n  dataSets: PropTypes.array,\n  yAxisLabel: PropTypes.string,\n  graphLabel: PropTypes.string,\n  fontColor: PropTypes.string,\n  legendLabel: PropTypes.string,\n  tooltipLabel: PropTypes.string,\n  legendContainerId: PropTypes.string,\n};\n\nexport default LineChartWrapper;\n","import { ISOStringWithDashFull } from '../../dateUtils';\n\nexport const datesRed = (state, action) => {\n  switch (action.type) {\n  case 'SET_FROM_DATE':\n    return { ...state, fromDate: ISOStringWithDashFull(action.fromDate) };\n  case 'SET_TO_DATE':\n    return { ...state, toDate: ISOStringWithDashFull(action.toDate) };\n  default:\n    return state;\n  }\n};\n","import { useReducer, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { datesRed } from './reducers';\nimport { bgColors, borderColors } from '../colors';\nimport { ISOStringWithDashFull, localeFromTSMonthShort } from '../../dateUtils';\n\nimport {\n  getActiveCountryCases,\n  cleanActiveCountryCases,\n} from './redux/countActions';\n\nexport const useDatePicker = () => {\n  const initState = {\n    toDate: ISOStringWithDashFull(new Date()),\n    fromDate: ISOStringWithDashFull(new Date('2019-12-01')),\n  };\n\n  return useReducer(datesRed, initState);\n};\n\nexport const useCreateDataset = (data, _id) => {\n  const dispatch = useDispatch();\n\n  const newCases = useRef([]);\n  const newDeaths = useRef([]);\n  const totalCases = useRef([]);\n  const totalDeaths = useRef([]);\n\n  const { activeCountryCases } = useSelector((state) => state.cont);\n\n  useEffect(() => {\n    if (_id) {\n      getActiveCountryCases({\n        _id,\n        toDate: data.toDate,\n        fromDate: data.fromDate,\n      })(dispatch);\n    }\n    return () => {\n      newCases.current = [];\n      newDeaths.current = [];\n      totalCases.current = [];\n      totalDeaths.current = [];\n      cleanActiveCountryCases()(dispatch);\n    };\n  }, [ _id, data, dispatch ]);\n\n  useEffect(() => {\n    activeCountryCases.forEach((c) => {\n      const {\n        recordDate,\n        new_cases,\n        new_deaths,\n        total_cases,\n        total_deaths,\n      } = c;\n      newCases.current.push({ new_cases, recordDate });\n      newDeaths.current.push({ new_deaths, recordDate });\n      totalCases.current.push({ total_cases, recordDate });\n      totalDeaths.current.push({ total_deaths, recordDate });\n    });\n  }, [ activeCountryCases ]);\n\n  const totalCasesXAxis = totalCases.current.map((e) =>\n    localeFromTSMonthShort(e.recordDate)\n  );\n  const newCasesXAxis = newCases.current.map((e) =>\n    localeFromTSMonthShort(e.recordDate)\n  );\n  const totalDeathsXAxis = totalDeaths.current.map((e) =>\n    localeFromTSMonthShort(e.recordDate)\n  );\n  const newDeathsXAxis = newDeaths.current.map((e) =>\n    localeFromTSMonthShort(e.recordDate)\n  );\n\n  const totalCasesData = {\n    fill: true,\n    lineTension: 0,\n    pointRadius: 0,\n    pointHitRadius: 15,\n    label: 'Total cases',\n    borderColor: borderColors.warning,\n    backgroundColor: bgColors.warning,\n    data: totalCases.current.map((e) => window.Number(e['total_cases'])),\n  };\n\n  const newCasesData = {\n    fill: true,\n    lineTension: 0,\n    pointRadius: 0,\n    pointHitRadius: 15,\n    label: 'New cases',\n    borderColor: borderColors.success,\n    backgroundColor: bgColors.success,\n    data: newCases.current.map((e) => window.Number(e['new_cases'])),\n  };\n\n  const totalDeathsData = {\n    fill: true,\n    lineTension: 0,\n    pointRadius: 0,\n    pointHitRadius: 15,\n    label: 'Total deaths',\n    borderColor: borderColors.danger,\n    backgroundColor: bgColors.danger,\n    data: totalDeaths.current.map((e) => window.Number(e['total_deaths'])),\n  };\n\n  const newDeathsData = {\n    fill: true,\n    lineTension: 0,\n    pointRadius: 0,\n    pointHitRadius: 15,\n    label: 'New deaths',\n    borderColor: borderColors.primary,\n    backgroundColor: bgColors.primary,\n    data: newDeaths.current.map((e) => window.Number(e['new_deaths'])),\n  };\n\n  return [\n    { newCasesData, newCasesXAxis, newCasesFC: newCasesData.borderColor },\n    { newDeathsData, newDeathsXAxis, newDeathsFC: newDeathsData.borderColor },\n    {\n      totalCasesData,\n      totalCasesXAxis,\n      totalCasesFC: totalCasesData.borderColor,\n    },\n    {\n      totalDeathsData,\n      totalDeathsXAxis,\n      totalDeathsFC: totalDeathsData.borderColor,\n    },\n  ];\n};\n","export const bgColors = {\n  primary: '#599699',\n  success: '#f1a54d',\n  warning: '#91d302',\n  danger: '#0266cb',\n};\n\nexport const borderColors = {\n  primary: '#070707',\n  success: '#1e3b9e',\n  warning: '#4b5579',\n  danger: '#b7000d',\n};\n"],"sourceRoot":""}