{"version":3,"sources":["pages/WorldCases.js"],"names":["WorldCases","dispatch","useDispatch","useDatePicker","data","dataDispatch","useSelector","state","cont","activeCountry","gettingActiveCountryCases","useEffect","getCountryByName","useCreateDataset","_id","newCasesData","newCasesXAxis","newCasesFC","newDeathsData","newDeathsXAxis","newDeathsFC","totalCasesData","totalCasesXAxis","totalCasesFC","totalDeathsData","totalDeathsXAxis","totalDeathsFC","className","name","short_name","tooltipLabel","xAxis","fontColor","graphLabel","dataSets","legendContainerId","spinner","legendLabel","yAxisLabel"],"mappings":"yNAsFeA,UA3EI,WACjB,IAAMC,EAAWC,wBADM,EAGQC,cAHR,mBAGfC,EAHe,KAGTC,EAHS,OAI8BC,uBACnD,SAACC,GAAD,OAAWA,EAAMC,QADXC,EAJe,EAIfA,cAAeC,EAJA,EAIAA,0BAIvBC,qBAAU,WACRC,YAAiB,QAAjBA,CAA0BX,KACzB,CAAEA,IAVkB,MAiBnBY,YAAiBT,EAAMK,EAAcK,KAjBlB,0BAanBC,EAbmB,EAanBA,aAAcC,EAbK,EAaLA,cAAeC,EAbV,EAaUA,WAbV,OAcnBC,EAdmB,EAcnBA,cAAeC,EAdI,EAcJA,eAAgBC,EAdZ,EAcYA,YAdZ,OAenBC,EAfmB,EAenBA,eAAgBC,EAfG,EAeHA,gBAAiBC,EAfd,EAecA,aAfd,OAgBnBC,EAhBmB,EAgBnBA,gBAAiBC,EAhBE,EAgBFA,iBAAkBC,EAhBhB,EAgBgBA,cAGvC,OACE,kBAAC,IAAD,CAAWC,UAAU,sBACnB,kBAAC,IAAD,CAAkBC,KAAM,QAASC,WAAY,KAC7C,kBAAC,IAAD,CAAYzB,KAAMA,EAAMH,SAAUI,IAElC,kBAAC,IAAD,CACEyB,aAAc,QACdC,MAAOT,EACPU,UAAWT,EACXU,WAAY,cACZC,SAAU,CAAEb,GACZc,kBAAmB,cACnBC,QAAS1B,EACT2B,YAAa,yBACbC,WAAY,kCAGd,kBAAC,IAAD,CACEP,MAAOf,EACPgB,UAAWf,EACXa,aAAc,QACdG,WAAY,YACZC,SAAU,CAAEnB,GACZoB,kBAAmB,YACnBC,QAAS1B,EACT2B,YAAa,uBACbC,WAAY,gCAGd,kBAAC,IAAD,CACER,aAAc,SACdC,MAAON,EACPO,UAAWN,EACXO,WAAY,eACZC,SAAU,CAAEV,GACZW,kBAAmB,eACnBC,QAAS1B,EACT2B,YAAa,4BACbC,WAAY,mCAGd,kBAAC,IAAD,CACER,aAAc,SACdC,MAAOZ,EACPa,UAAWZ,EACXa,WAAY,aACZC,SAAU,CAAEhB,GACZiB,kBAAmB,aACnBC,QAAS1B,EACT2B,YAAa,0BACbC,WAAY","file":"static/js/8.436d5c16.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\n\nimport { getCountryByName } from './countries/redux/countActions';\n\nimport { DatePicker } from './DatePicker';\nimport LineChartWrapper from './LineChartWrapper';\nimport { CountryPageTitle } from './countries/CountryPageTitle';\nimport { useDatePicker, useCreateDataset } from './countries/useCustomHooks';\n\nconst WorldCases = () => {\n  const dispatch = useDispatch();\n\n  const [ data, dataDispatch ] = useDatePicker();\n  const { activeCountry, gettingActiveCountryCases } = useSelector(\n    (state) => state.cont\n  );\n\n  useEffect(() => {\n    getCountryByName('World')(dispatch);\n  }, [ dispatch ]);\n\n  const [\n    { newCasesData, newCasesXAxis, newCasesFC },\n    { newDeathsData, newDeathsXAxis, newDeathsFC },\n    { totalCasesData, totalCasesXAxis, totalCasesFC },\n    { totalDeathsData, totalDeathsXAxis, totalDeathsFC },\n  ] = useCreateDataset(data, activeCountry._id);\n\n  return (\n    <Container className=\"country-graph-page\">\n      <CountryPageTitle name={'World'} short_name={''} />\n      <DatePicker data={data} dispatch={dataDispatch} />\n\n      <LineChartWrapper\n        tooltipLabel={'Cases'}\n        xAxis={totalCasesXAxis}\n        fontColor={totalCasesFC}\n        graphLabel={'Total cases'}\n        dataSets={[ totalCasesData ]}\n        legendContainerId={'total-cases'}\n        spinner={gettingActiveCountryCases}\n        legendLabel={'Total cases of Covid19'}\n        yAxisLabel={'Total number of Covid19 cases'}\n      />\n\n      <LineChartWrapper\n        xAxis={newCasesXAxis}\n        fontColor={newCasesFC}\n        tooltipLabel={'Cases'}\n        graphLabel={'New cases'}\n        dataSets={[ newCasesData ]}\n        legendContainerId={'new-cases'}\n        spinner={gettingActiveCountryCases}\n        legendLabel={'New cases of Covid19'}\n        yAxisLabel={'Number of new Covid19 cases'}\n      />\n\n      <LineChartWrapper\n        tooltipLabel={'Deaths'}\n        xAxis={totalDeathsXAxis}\n        fontColor={totalDeathsFC}\n        graphLabel={'Total deaths'}\n        dataSets={[ totalDeathsData ]}\n        legendContainerId={'total-deaths'}\n        spinner={gettingActiveCountryCases}\n        legendLabel={'Total deaths from Covid19'}\n        yAxisLabel={'Total number of Covid19 deaths'}\n      />\n\n      <LineChartWrapper\n        tooltipLabel={'Deaths'}\n        xAxis={newDeathsXAxis}\n        fontColor={newDeathsFC}\n        graphLabel={'New deaths'}\n        dataSets={[ newDeathsData ]}\n        legendContainerId={'new-deaths'}\n        spinner={gettingActiveCountryCases}\n        legendLabel={'New deaths from Covid19'}\n        yAxisLabel={'Number of new Covid19 deaths'}\n      />\n    </Container>\n  );\n};\n\nexport default WorldCases;\n"],"sourceRoot":""}